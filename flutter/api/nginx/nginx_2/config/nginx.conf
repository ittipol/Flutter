events {
    worker_connections  1024;
    # worker_processes and worker_connections allows you to calculate maxclients value: 
    # max_clients = worker_processes * worker_connections
}

http {

  include /etc/nginx/mime.types;

  default_type  application/octet-stream;

  # server {
  #   listen 80;
  #   server_name localhost;

  #   # Discourage deep links by using a permanent redirect to home page of HTTPS site
  #   # return 301 https://$host;

  #   # Alternatively, redirect all HTTP links to the matching HTTPS page
  #   # return 301 https://$host$request_uri;
  # }

  server {
    listen 5051 ssl;
    server_name localhost;

    ssl_certificate     /etc/nginx/certs/server.crt;
    ssl_certificate_key /etc/nginx/certs/server.pem;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    ssl_protocols TLSv1.2;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS 
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # OCSP stapling
    # ssl_stapling on;
    # ssl_verify_client on;
    # ssl_stapling_verify on;
 
    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    # ssl_trusted_certificate /etc/nginx/certs/ca.crt;

    location / {
      proxy_set_header Host $http_host;
      proxy_pass       http://go_app:5000/;
    }
  }

}
